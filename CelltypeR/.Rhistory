# read in the cluster markers
ClusterMarkers <- read.csv("/Users/rhalenathomas/Documents/Data/scRNAseq/ParseExample/clustermarkers_intRNA.csv")
library(Seurat)
library(tidyverse)
library(Seurat)
library(tidyverse)
```
library(ggplot2)
library(enrichR)
setEnrichrSite("Enrichr") # Human genes
# list of all the databases
# get the possible libraries
dbs <- listEnrichrDbs()
# this will list the possible libraries
dbs
# select libraries with cell types
db <- c('CellMarker_Augmented_2021','Azimuth_Cell_Types_2021')
# function for a quick look
checkCelltypes <- function(cluster_num = 0){
clusterX <- ClusterMarkers %>% filter(cluster == cluster_num & avg_log2FC > 0.25)
genes <- clusterX$gene
# the cell type libraries
# get the results for each library
clusterX.cell <- enrichr(genes, databases = db)
# visualize the results
print(plotEnrich(clusterX.cell[[1]], showTerms = 20, numChar = 40, y = "Count", orderBy = "P.value", title = 'CellMarker_Augmented_2021'))
print(plotEnrich(clusterX.cell[[2]], showTerms = 20, numChar = 40, y = "Count", orderBy = "P.value", title = 'Azimuth_Cell_Types_2021'))
}
checkCelltypes(cluster_num = 0)
checkCelltypes(cluster_num = 1)
checkCelltypes(cluster_num = 2)
checkCelltypes(cluster_num = 3)
checkCelltypes(cluster_num = 4)
checkCelltypes(cluster_num = 5)
checkCelltypes(cluster_num = 6)
checkCelltypes(cluster_num = 7)
checkCelltypes(cluster_num = 8)
checkCelltypes(cluster_num = 9)
checkCelltypes(cluster_num = 10)
checkCelltypes(cluster_num = 11)
checkCelltypes(cluster_num = 12)
checkCelltypes(cluster_num = 13)
checkCelltypes(cluster_num = 14)
head(ClusterMarkers)
top5 <- ClusterMarkers %>% group_by(cluster) %>% top_n(n=5, wt =avg_log2FC)
top1 <- ClusterMarkers %>% group_by(cluster) %>% top_n(n=1, wt =avg_log2FC)
print(top1)
head(ClusterMarkers)
top5 <- ClusterMarkers %>% group_by(cluster) %>% top_n(n=5, wt =avg_log2FC)
top2 <- ClusterMarkers %>% group_by(cluster) %>% top_n(n=2, wt =avg_log2FC)
print(top2)
# load libraries
library(Seurat)
library(dplyr)
library(ggplot2)
library(reshape2)
library(CelltypeR)
library(scProportionTest)
# output path for data objects
outpath <- "/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/Analysis/PaperFigures/"
# output path for figures
output_path <- "/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/TimeCourseAIW/Analysis/Figure4/"
# read in files needed:
# data object with clustering done ready to label
seu.q <- readRDS(paste(outpath,"All9MOannaote.12072022.Rds",sep=""))
# reference hMO subset annotated
seu.r <-readRDS("/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/Analysis/NatMethodJuneSubmission/Seu9000lablesJune23.RDS")
# antibody features in order
AB <- c("CD24","CD56","CD29","CD15","CD184","CD133","CD71","CD44","GLAST","AQP4","HepaCAM", "CD140a","O4")
colnames(seu.q@meta.data)
DimPlot(seu.q, raster = TRUE, group.by = "labels4")
#DimPlot(seu.r)
DimPlot(seu.q, raster = TRUE, group.by = "labels4", label = TRUE,label.size = 6)
input_df <- read.csv(test_path <- "/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/Analysis/9MBO/prepro_outs/retrotransformed_flowset.csv")
print(dim(input_df))
View(input_df)
print(colnames)
print(colnames(input_df))
colnames(seu.q@meta.data)
# Define the metadata columns you want to keep
metadata_to_keep <- c("orig.ident","nCount_RNA","nFeature_RNA","Batch",
"age","ipsc", "gating.groups1","Ex.date","RNA_snn_res.0.25",
"RNA_snn_res.0.5",
"RNA_snn_res.1",
"labels.main","labels4")
# Update the Seurat object to keep only the desired metadata columns
seu.q@meta.data <- seu.q@meta.data[, metadata_to_keep]
colnames(seu.qq@meta.data)
colnames(seu.q@meta.data)
output_path
Idents(seu) <- "RNA_snn_res.1"
pdf(paste(output_path,"ExpressionRes1.pdf",sep = ""))
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE))
}
# heatmap
clustnum <- length(levels(seu))-1
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.1', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
# resolution 0.5
Idents(seu) <- "RNA_snn_res.0.5"
pdf(paste(output_path,"ExpressionRes05.pdf",sep = ""))
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE))
}
# heatmap
clustnum <- length(levels(seu))-1
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.0.5', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
# resolution 0.25
Idents(seu) <- "RNA_snn_res.0.25"
pdf(paste(output_path,"ExpressionRes025.pdf",sep = ""))
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE))
}
# heatmap
clustnum <- length(levels(seu))-1
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.0.25', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
seu <- seu.q
Idents(seu) <- "RNA_snn_res.1"
pdf(paste(output_path,"ExpressionRes1.pdf",sep = ""))
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE))
}
# heatmap
clustnum <- length(levels(seu))-1
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.1', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
# resolution 0.5
Idents(seu) <- "RNA_snn_res.0.5"
pdf(paste(output_path,"ExpressionRes05.pdf",sep = ""))
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE))
}
# heatmap
clustnum <- length(levels(seu))-1
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.0.5', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
# resolution 0.25
Idents(seu) <- "RNA_snn_res.0.25"
pdf(paste(output_path,"ExpressionRes025.pdf",sep = ""))
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE))
}
# heatmap
clustnum <- length(levels(seu))-1
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.0.25', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
Idents(seu) <- "RNA_snn_res.0.25"
pdf(paste(output_path,"ExpressionRes025.pdf",sep = ""))
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE, raster = FALSE))
}
# heatmap
clustnum <- length(levels(seu))-1
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.0.25', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
Idents(seu) <- "RNA_snn_res.0.5"
pdf(paste(output_path,"ExpressionRes05.pdf",sep = ""))
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97',
label = TRUE, raster = FALSE))
}
# heatmap
clustnum <- length(levels(seu))-1
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.0.5', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
reference_data <- read.csv(reference_path <- "/Users/rhalenathomas/GITHUB/CelltypeR/ExampleOuts/FinalReferenceMatrix.csv")
# the reference matrix need to be in the format cell types as rows and markers as columns
# there is a column X with the cell type names
View(reference_data)
df1 <- reference_data
rownames(df1) <- df1$X # add row names (these are the markers)
df1 <- df1 %>% select(-"X") # remove the column with the marker names
colnames(df1)
colnames(df1) <- c("Astrocytes","Endothelial","Epithelial","Neurons",
"NPC","OPC","Oligo","RadialGlia","StemCell")
colnames(df1)
cor <- find_correlation(test = input_df,
reference = df1,
min_corr = 0.35,
min_diff = 0.05)
write.csv(cor, paste(output_path, "AllcellsCor_thesh35.csv"),sep = "")
# creates a dataframe with cor1 cor2 and predicted cell type label
cor2 <- find_correlation(test = input_df,
reference = df1,
min_corr = 0.55,
min_diff = 0.05)
write.csv(cor2, paste(output_path, "AllcellsCor_thesh55.csv"),sep = "")
cor3 <- find_correlation(test = input_df,
reference = df1,
min_corr = 0.05,
min_diff = 0.05)
write.csv(cor3, paste(output_path, "AllcellsCor_thesh05.csv"),sep = "")
#### visualize the correlation results
pdf(paste(output_path, "CorrelationPlots.pdf",sep = ""))
print(plot_corr(cor, threshold = 0.35, min_cells = 400))
print(plot_corr(cor2, threshold = 0.55, min_cells = 400))
print(plot_corr(cor3, threshold = 0.05, min_cells = 400))
dev.off()
#### add the correlation results into the seurat object
# add the correlation predictions to the meta data
seu <- AddMetaData(object=seu, metadata=cor$cell.label, col.name = 'cor.labels3505')
# add the correlation predictions to the meta data
seu <- AddMetaData(object=seu, metadata=cor2$cell.label, col.name = 'cor.labels5505')
# add the correlation predictions to the meta data
seu <- AddMetaData(object=seu, metadata=cor3$cell.label, col.name = 'cor.labels0505')
### visualize the correlation labels
pdf(paste(output_path, "CorrelationPlotsUMAPs.pdf",sep = ""), width = 20, height = 6)
print(DimPlot(seu, group.by = 'cor.labels3505', label = TRUE))
print(DimPlot(seu, group.by = 'cor.labels5505', label = TRUE))
print(DimPlot(seu, group.by = 'cor.labels0505', label = TRUE))
dev.off()
### add the cor labels per cluster - will just label the highest cluster number
cor.ann <- get_annotation(seu, seu.cluster = seu$RNA_snn_res.1,
seu.label = seu$cor.labels3505, top_n = 3,
filter_out = c("Unknown","unknown","Mixed","unassigned","Unassigned"),
Label = "CAM3505")
seu <- annotate(seu,annotations = cor.ann$CAM3505,
to_label = "RNA_snn_res.1",
annotation_name = "CAM35")
cor.ann <- get_annotation(seu, seu.cluster = seu$RNA_snn_res.1,
seu.label = seu$cor.labels5505, top_n = 3,
filter_out = c("Unknown","unknown","Mixed","unassigned","Unassigned"),
Label = "CAM5505")
seu <- annotate(seu,annotations = cor.ann$CAM5505,
to_label = "RNA_snn_res.1",
annotation_name = "CAM55")
cor.ann <- get_annotation(seu, seu.cluster = seu$RNA_snn_res.1,
seu.label = seu$cor.labels0505, top_n = 3,
filter_out = c("Unknown","unknown","Mixed","unassigned","Unassigned"),
Label = "CAM0505")
seu <- annotate(seu,annotations = cor.ann$CAM0505,
to_label = "RNA_snn_res.1",
annotation_name = "CAM05")
View(cor)
View(df1)
View(input_df)
View(df1)
dim(input_df)
input_df <- input_df %>% select(c("CD24","CD56","CD29","CD15",
"CD184","CD133","CD71","CD44",
"GLAST","AQP4","HepaCAM",
"CD140a","O4","Batch"))
dim(input_df)
cor <- find_correlation(test = input_df,
reference = df1,
min_corr = 0.35,
min_diff = 0.05)
write.csv(cor, paste(output_path, "AllcellsCor_thesh35.csv"),sep = "")
write.csv(cor, paste(output_path, "AllcellsCor_thesh35.csv", sep = ""))
View(df1)
print(dim(input_df))
print(colnames(input_df))
head(input_df)
View(input_df)
setwd("~/Documents/Data/FlowCytometry/PhenoID/Analysis/NatMethodJuneSubmission")
setwd("~/Documents/Data/FlowCytometry/PhenoID/Analysis/NatMethodJuneSubmission")
getwd()
setwd("~/Documents/Data/FlowCytometry/PhenoID/Analysis/NatMethodJuneSubmission/")
getwd()
Idents(seu) <- "RNA_snn_res.0.25"
pdf("ExpressionRes025.pdf")
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE, raster = FALSE))
}
# heatmap
clustnum <- length(levels(seu))-1
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.0.25', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
Idents(seu) <- "RNA_snn_res.0.5"
pdf("All9MBOExpressionRes05.pdf")
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97',
label = TRUE, raster = FALSE))
}
# heatmap
clustnum <- length(levels(seu))-1
pdf("HeatmapRes05expression.pdf")
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.0.5', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
Idents(seu) <- "RNA_snn_res.0.5"
pdf("All9MBOExpressionRes05.pdf")
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97',
label = TRUE, raster = FALSE))
}
# heatmap
clustnum <- length(levels(seu))-1
pdf("HeatmapRes05expression.pdf")
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.0.5', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
View(df1)
View(seu)
write.csv("AllcellsCor_thesh35.csv")
write.csv(cor,"AllcellsCor_thesh35.csv")
write.csv(cor2,"AllcellsCor_thesh55.csv")
write.csv(cor3,"AllcellsCor_thesh05.csv")
pdf("AllCellsCorrelationPlots.pdf")
print(plot_corr(cor, threshold = 0.35, min_cells = 400))
print(plot_corr(cor2, threshold = 0.55, min_cells = 400))
print(plot_corr(cor3, threshold = 0.05, min_cells = 400))
dev.off()
Idents(seu) <- "RNA_snn_res.0.5"
pdf("All9MBOExpressionRes05.pdf")
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97',
label = TRUE, raster = FALSE))
}
# heatmap
clustnum <- length(levels(seu))-1
#pdf("HeatmapRes05expression.pdf")
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.0.5', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
View(seu)
Idents(seu) <- "RNA_snn_res.1"
pdf("ExpressionRes1.pdf")
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE, raster = FALSE))
}
# heatmap
clustnum <- length(levels(seu))-1
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.1', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
View(df1)
Idents(seu) <- "RNA_snn_res.1"
pdf("ExpressionRes1.pdf")
# UMAPs
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE, raster = FALSE))
}
# heatmap
clustnum <- length(levels(seu))-1
print(plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.1', markers = AB,
var_names = 0:clustnum, slot = 'scale.data', xlab = "Cluster",
ylab = "Markers"))
dev.off()
?FeaturePlot
pdf("All9MBO_UMAPfeatures.pdf")
print(FeaturePlot(seu, features = AB, group = 'RNA_snn_res.1', min.cutoff = 'q1',
max.cutoff = 'q97', label = TRUE, raster = FALSE,
ncol = 4))
dev.off()
pdf("All9MBO_UMAPfeatures.pdf")
print(FeaturePlot(seu, features = AB, min.cutoff = 'q1',
max.cutoff = 'q97', label = TRUE, raster = FALSE,
ncol = 4))
dev.off()
View(cor)
View(input_df)
reference_data <- read.csv(reference_path <- "/Users/rhalenathomas/GITHUB/CelltypeR/ExampleOuts/FinalReferenceMatrix.csv")
# the reference matrix need to be in the format cell types as rows and markers as columns
# there is a column X with the cell type names
df1 <- reference_data
rownames(df1) <- df1$X # add row names (these are the markers)
View(df1)
df1 <- df1 %>% select(-"X") # remove the column with the marker names
colnames(df1) <- c("Astrocytes","Endothelial","Epithelial","Neurons",
"NPC","OPC","Oligo","RadialGlia","StemCell")
df.ref <- as.data.frame(t(df1))
View(df.ref)
df.ref$X <- rownames(df.ref)
cor <- find_correlation(test = input_df,
reference = df1,
min_corr = 0.35,
min_diff = 0.05)
write.csv(cor,"AllcellsCor_thesh35.csv")
View(cor)
cor <- find_correlation(test = input_df,
reference = df.ref,
min_corr = 0.35,
min_diff = 0.05)
View(cor)
View(cor2)
View(cor)
View(df.ref)
View(df.ref)
View(input_df)
input_df$X <- input_df$Batch
input_df$X <- rownames(input_df)
dim(input_df)
test <- input_df[1:100,1:15]
cor <- find_correlation(test = test,
reference = df.ref,
min_corr = 0.35,
min_diff = 0.05)
View(cor)
input_df$X <- input_df$Batch
test <- input_df[1:100,1:15]
cor <- find_correlation(test = test,
reference = df.ref,
min_corr = 0.35,
min_diff = 0.05)
View(cor)
df.ref <- as.data.frame(t(df1))
cor <- find_correlation(test = test,
reference = df.ref,
min_corr = 0.35,
min_diff = 0.05)
View(cor)
df.ref$X <- rownames(df.ref)
input_df$X <- rownames(input_df)
dim(input_df)
test <- input_df[1:100,1:15]
input_df <- read.csv(test_path <- "/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/Analysis/9MBO/prepro_outs/retrotransformed_flowset.csv")
View(cor)
View(cor)
View(cor)
reference_data <- read.csv(reference_path <- "/Users/rhalenathomas/GITHUB/CelltypeR/ExampleOuts/FinalReferenceMatrix.csv")
# the reference matrix need to be in the format cell types as rows and markers as columns
# there is a column X with the cell type names
df1 <- reference_data
rownames(df1) <- df1$X # add row names (these are the markers)
df1 <- df1 %>% select(-"X") # remove the column with the marker names
colnames(df1) <- c("Astrocytes","Endothelial","Epithelial","Neurons",
"NPC","OPC","Oligo","RadialGlia","StemCell")
df.ref <- as.data.frame(t(df1))
df.ref$X <- rownames(df.ref)
test <- input_df[1:100]
View(test)
cor <- find_correlation(test = test,
reference = df.ref,
min_corr = 0.35,
min_diff = 0.05)
View(cor)
View(input_df)
View(test)
test <- input_df[1:100]
dim(input_df)
test <- input_df[1:100, 1:19]
cor <- find_correlation(test = test,
reference = df.ref,
min_corr = 0.35,
min_diff = 0.05)
View(cor)
cor <- find_correlation(test = input_df,
reference = df.ref,
min_corr = 0.35,
min_diff = 0.05)
View(cor)
write.csv(cor,"AllcellsCor_thesh35.csv")
cor2 <- find_correlation(test = input_df,
reference = df.ref,
min_corr = 0.55,
min_diff = 0.05)
write.csv(cor2,"AllcellsCor_thesh55.csv")
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE, raster = FALSE))
}
3+5
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE, raster = FALSE))
}
DimPlot(seu)
View(seu)
getwd()
colnames(seu@meta.data)
DimPlot(seu, group.by = "RNA_snn_res.0.5", label = TRUE)
version(data.table)
packageVersion(data.table)
library(data.table)
package_version("data.table")
packageVersion("data.table")
setwd("~/GITHUB/CelltypeR/CelltypeR")
setwd("~/GITHUB/CelltypeR/CelltypeR")
getwd
getwd()
devtools::build()
devtools::build()
devtools::build()
getwd()
devtools::build()
