colnames(df1) <- c("Astrocytes","Endothelial","Epithelial","Neurons",
"NPC","OPC","Oligo","RadialGlia","StemCell")
df.ref <- as.data.frame(t(df1))
df.ref$X <- rownames(df.ref)
input_df <- read.csv("/Users/rhalenathomas/GITHUB/CelltypeR/ExampleOuts/AIW002batchesCandD.csv")
cor <- find_correlation(test = input_df,
reference = df.ref,
min_corr = 0.35,
min_diff = 0.01)
View(input_df)
View(df.ref)
View(reference_data)
View(reference_data)
View(df1)
View(df.ref)
View(input_df)
input_df <- read.csv("/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/FlowDataFiles/PresortingMay10June10/flowsetMayJune10.csv")
View(input_df)
cor <- read.csv("/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/Analysis/NatMethodJuneSubmission/Figure5/Cor3501Aug30.csv")
plot_corr(cor, threshold = 0.35, min_cells = 200)
reference_data <- read.csv("/GITHUB/CelltypeR/ExampleOuts/ReferenceMatrices/FinalReferenceMatrix.csv")
View(cor)
cor <- cor %>% select(-"X.1")
plot_corr(cor, threshold = 0.35, min_cells = 200)
df1 <- reference_data
t.lables <- as.data.frame(table(seu$RNA_snn_res.1.2, seu$cor.labels))
t.lables$Freq <- as.double(t.lables$Freq)
colnames(t.lables) <- c("Cluster", "Label","Freq")
top.labs <- t.lables  %>% group_by(Cluster) %>% top_n(5, Freq)
sort.tops <- top.labs %>% as.data.frame() %>% arrange(desc(Freq))  %>% arrange(Cluster)
print(sort.tops)
# filter cells out that are double labelled and very few
thresh = 200
freq.cor <- data.frame(table(seu$cor.labels))
keep <- freq.cor %>% filter(Freq > thresh)
cellident <- as.character(keep$Var1)
Idents(seu) <- "cor.labels"
seu.sub <- subset(seu, ident = cellident, invert = FALSE)
plot_lab_clust(seu.sub, seu.sub$seurat_clusters, seu.sub$cor.labels, filter_out = "Unassigned")
DimPlot(seu.sub, group.by = "cor.labels", raster = FALSE, label = TRUE)
plot_lab_clust(seu, seu$seurat_clusters, seu$rfm.pred2, filter_out = c( "Unassigned","Mixed"))
t.lables <- as.data.frame(table(seu$RNA_snn_res.1.2, seu$rfm.pred2))
t.lables$Freq <- as.double(t.lables$Freq)
colnames(t.lables) <- c("Cluster", "Label","Freq")
top.labs <- t.lables  %>% group_by(Cluster) %>% top_n(5, Freq)
sort.tops <- top.labs %>% as.data.frame() %>% arrange(desc(Freq))  %>% arrange(Cluster)
print(sort.tops)
DimPlot(seu, group.by = "rfm.pred2", raster = FALSE, label = TRUE)
t.lables <- as.data.frame(table(seu$RNA_snn_res.1.2, seu$seu.pred))
t.lables$Freq <- as.double(t.lables$Freq)
colnames(t.lables) <- c("Cluster", "Label","Freq")
top.labs <- t.lables  %>% group_by(Cluster) %>% top_n(5, Freq)
sort.tops <- top.labs %>% as.data.frame() %>% arrange(desc(Freq))  %>% arrange(Cluster)
print(sort.tops)
DimPlot(seu, label = TRUE, raster = FALSE, group.by = "seu.pred")
an.list <- list(cor.ann, rfm.ann, seu.ann)
seu.ann <- get_annotation(seu, seu.cluster = seu$RNA_snn_res.1.2,
seu.label = seu$seu.pred, top_n = 1,
filter_out = c("Unknown","unknown","Mixed",
"unassigned","Unassigned"),
Label = "seu")
rfm.ann <- get_annotation(seu, seu.cluster = seu$RNA_snn_res.1.2,
seu.label = seu$rfm.pred2, top_n = 3,
filter_out = c("Unknown","unknown","Mixed",
"unassigned","Unassigned"),
Label = "RFM")
t.lables <- as.data.frame(table(seu$RNA_snn_res.1.2, seu$rfm.pred2))
t.lables$Freq <- as.double(t.lables$Freq)
colnames(t.lables) <- c("Cluster", "Label","Freq")
top.labs <- t.lables  %>% group_by(Cluster) %>% top_n(5, Freq)
sort.tops <- top.labs %>% as.data.frame() %>% arrange(desc(Freq))  %>% arrange(Cluster)
print(sort.tops)
cor.ann <- get_annotation(seu, seu.cluster = seu$RNA_snn_res.1.2,
seu.label = seu$cor.labels, top_n = 3,
filter_out = c("Unknown","unknown","Mixed",
"unassigned","Unassigned"),
Label = "CAM")
# top 5 per groups
t.lables <- as.data.frame(table(seu$RNA_snn_res.1.2, seu$cor.labels))
t.lables$Freq <- as.double(t.lables$Freq)
colnames(t.lables) <- c("Cluster", "Label","Freq")
top.labs <- t.lables  %>% group_by(Cluster) %>% top_n(5, Freq)
sort.tops <- top.labs %>% as.data.frame() %>% arrange(desc(Freq))  %>% arrange(Cluster)
print(sort.tops)
t.lables <- as.data.frame(table(seu$RNA_snn_res.1.2, seu$seu.pred))
t.lables$Freq <- as.double(t.lables$Freq)
colnames(t.lables) <- c("Cluster", "Label","Freq")
top.labs <- t.lables  %>% group_by(Cluster) %>% top_n(5, Freq)
sort.tops <- top.labs %>% as.data.frame() %>% arrange(desc(Freq))  %>% arrange(Cluster)
print(sort.tops)
an.list <- list(cor.ann, rfm.ann, seu.ann)
df.an <- annotate_df(an.list)
df.an
cluster.ids <- c("Glia-lineage","Astrocytes 2","Astrocytes 1","Neural-lineage","Radial Glia 1",   # 0-4
"Epithelial","Neurons 1","Neurons 1","Radial Glia 1","Neurons 1",  #5-9
"OPC","Radial Glia 2","Astrocytes 1", "Neurons 2","Endothelial", #10-14
"Radial Glia 1", "Radial Glia 1a", "Glia-lineage","NPC","OPC-like",  #15-19
"Neurons 2", "Stem cell like","Neurons 2", "Astrocytes 2", "NPC", #20-24
"Neurons 2","Radial Glia 3","Astrocytes 2","Oligodendrocytes"
)
seu <- annotate(seu, annotations = cluster.ids, to_label = "RNA_snn_res.1.2",
annotation_name = "Celltypes")
cluster.ids <- c("Glia-lineage","Astrocytes 2","Astrocytes 1","Neural-lineage","Radial Glia 1",   # 0-4
"Epithelial","Neurons 1","Neurons 1","Radial Glia 1","Neurons 1",  #5-9
"OPC","Radial Glia 2","Astrocytes 1", "Neurons 2","Endothelial", #10-14
"Radial Glia 1", "Radial Glia 1a", "Glia-lineage","NPC","OPC-like",  #15-19
"Neurons 2", "Stem cell like","Neurons 2", "Astrocytes 2", "NPC", #20-24
"Neurons 2","Radial Glia 3","Astrocytes 2","Oligodendrocytes"
)
seu <- CelltypeR::annotate(seu, annotations = cluster.ids, to_label = "RNA_snn_res.1.2",
annotation_name = "Celltypes")
DimPlot(seu, label = TRUE, raster = FALSE, label.size = 6)
cell.order <- c("Astrocytes 1", "Astrocytes 2",
"Radial Glia 1","Radial Glia 1a","Radial Glia 2",
"Radial Glia 3","Glia-lineage",
"Epithelial","Endothelial",
"Neurons 1","Neurons 2","NPC","Neural-lineage",
"Oligodendrocytes","OPC","OPC-like",
"Stem cell like")
clust.colours <- c("chocolate2",# Astrocytes 1
"darkorange", # Astrocytes 2
"pink", # RG1
"deeppink",# RG1a
"plum1", #RG2
"lightpink3",# RG3
"mistyrose2", # Glia-lineage
"steelblue3",# epithelial
"deepskyblue", # endothelial
"mediumpurple1",# neurons 1
"purple",# Neurons2
"plum3", # NPC
"mediumslateblue", # Neural lineage
"seagreen3",#Oligo
"olivedrab4", # OPC
"darkseagreen3",#OPC like
"tomato3",# stem like
"burlywood3", #extra
)
clust.colours <- c("chocolate2",# Astrocytes 1
"darkorange", # Astrocytes 2
"pink", # RG1
"deeppink",# RG1a
"plum1", #RG2
"lightpink3",# RG3
"mistyrose2", # Glia-lineage
"steelblue3",# epithelial
"deepskyblue", # endothelial
"mediumpurple1",# neurons 1
"purple",# Neurons2
"plum3", # NPC
"mediumslateblue", # Neural lineage
"seagreen3",#Oligo
"olivedrab4", # OPC
"darkseagreen3",#OPC like
"tomato3",# stem like
"burlywood3" #extra
)
DimPlot(seu, cols = clust.colours, shuffle = TRUE,
raster=FALSE, pt.size = 0.1, label = TRUE,
group.by = 'Celltypes',
order = rev(cell.order))
seu.all <- readRDS("/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/Analysis/NatMethodJuneSubmission/Figure5/CombinedABCD.RDS")
proportionplots(seu.all, seu.var = seu.all$Batch, seu.lable = seu.all$Celltypes, groups = "AIW002 Batch", my_colours = clust.colours)
library(scProportionTest)
# create a propotion test object
Idents(seu.all) <- "Celltypes"
prop_test <- sc_utils(seu.all)
# set up the comparison
# need to compare separately
prop_test <- permutation_test(
prop_test, cluster_identity = "Celltypes",
sample_1 = "A", sample_2 = "B",
sample_identity = "Batch"
)
# make the plot
permutation_plot(prop_test)
# save the plot
# png("prp.test.batchAvsB.png", width = 600, height = 300)
# permutation_plot(prop_test) +  theme(axis.text.x = element_text(size = 12),
#         axis.text.y = element_text(size = 12),
#         axis.title = element_text(size = 14),    # Adjust axis title size
#   legend.text = element_text(size = 12),   # Adjust legend text size
#   legend.title = element_text(size = 14))
# dev.off()
# need to compare separately
prop_test <- permutation_test(
prop_test, cluster_identity = "Celltypes",
sample_1 = "A", sample_2 = "C",
sample_identity = "Batch"
)
# make the plot
permutation_plot(prop_test)
# save the plot
# png("prp.test.batchAvsC.png", width = 600, height = 300)
# permutation_plot(prop_test) +  theme(axis.text.x = element_text(size = 12),
#         axis.text.y = element_text(size = 12),
#         axis.title = element_text(size = 14),    # Adjust axis title size
#   legend.text = element_text(size = 12),   # Adjust legend text size
#   legend.title = element_text(size = 14))
# dev.off()
# need to compare separately
prop_test <- permutation_test(
prop_test, cluster_identity = "Celltypes",
sample_1 = "A", sample_2 = "D",
sample_identity = "Batch"
)
# make the plot
permutation_plot(prop_test)
# save the plot
# png("prp.test.batchAvsD.png", width = 600, height = 300)
# permutation_plot(prop_test) +  theme(axis.text.x = element_text(size = 12),
#         axis.text.y = element_text(size = 12),
#         axis.title = element_text(size = 14),    # Adjust axis title size
#   legend.text = element_text(size = 12),   # Adjust legend text size
#   legend.title = element_text(size = 14))
# dev.off()
# need to compare separately
prop_test <- permutation_test(
prop_test, cluster_identity = "Celltypes",
sample_1 = "B", sample_2 = "C",
sample_identity = "Batch"
)
# make the plot
permutation_plot(prop_test)
# save the plot
# png("prp.test.batchBvsC.png", width = 600, height = 300)
# permutation_plot(prop_test) +  theme(axis.text.x = element_text(size = 12),
#         axis.text.y = element_text(size = 12),
#         axis.title = element_text(size = 14),    # Adjust axis title size
#   legend.text = element_text(size = 12),   # Adjust legend text size
#   legend.title = element_text(size = 14))
# dev.off()
# need to compare separately
prop_test <- permutation_test(
prop_test, cluster_identity = "Celltypes",
sample_1 = "B", sample_2 = "D",
sample_identity = "Batch"
)
# make the plot
permutation_plot(prop_test)
# save the plot
# png("prp.test.batchBvsD.png", width = 600, height = 300)
# permutation_plot(prop_test) +  theme(axis.text.x = element_text(size = 12),
#         axis.text.y = element_text(size = 12),
#         axis.title = element_text(size = 14),    # Adjust axis title size
#   legend.text = element_text(size = 12),   # Adjust legend text size
#   legend.title = element_text(size = 14))
# dev.off()
# need to compare separately
prop_test <- permutation_test(
prop_test, cluster_identity = "Celltypes",
sample_1 = "C", sample_2 = "D",
sample_identity = "Batch"
)
# make the plot
permutation_plot(prop_test)
# save the plot
# png("prp.test.batchCvsD.png", width = 600, height = 300)
# permutation_plot(prop_test) +  theme(axis.text.x = element_text(size = 12),
#         axis.text.y = element_text(size = 12),
#         axis.title = element_text(size = 14),    # Adjust axis title size
#   legend.text = element_text(size = 12),   # Adjust legend text size
#   legend.title = element_text(size = 14))
# dev.off()
seu <- readRDS("/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/Analysis/NatMethodJuneSubmission/Figure4/All9MOannaoteAug.RDS")
Idents(seu) <- "Celltypes"
levels(seu)
table(seu$GatingCells)
new.ids <- c("Astrocytes", "Astrocytes", "RadialGlia", "RadialGlia", "RadialGlia", "RadialGlia", "Glia-lineage",
"Epithelial", "Endothelial", "Neurons1", "Neurons2", "NPC", "Neural-lineage", "Oligodendrocytes",
"OPC", "OPC-like", "Stemlike")
seu <- CelltypeR::annotate(seu, annotations = new.ids,
to_label= "Celltypes",
annotation_name = "GatingCells")
table(seu$GatingCells)
DimPlot(seu, group.by = "GatingCells", raster = FALSE, label = TRUE)
# set the identity to the labels to by the hypergate input
Idents(seu) <- 'GatingCells'
# down sample
# repeat again with new subsample
i = 800
set.seed(i)
seu.down <- subset(x= seu, downsample = i)
DimPlot(seu.down, label = TRUE)
table(seu.down$GatingCells)
# create a matrix to be the input for hypergate
input.xm = as.matrix(GetAssayData(seu.down, slot = 'data'))
xm.t <- t(input.xm)
cluster.labels <- as.vector(seu.down$GatingCells)
cell.types <- c("Astrocytes",  "RadialGlia", "Glia-lineage",
"Epithelial", "Endothelial", "Neurons1", "Neurons2", "NPC", "Neural-lineage", "Oligodendrocytes",
"OPC", "OPC-like", "Stemlike")
# run gating and get the output
for (cell in cell.types) {
hg_output <- hypergate(xp = xm.t, gate_vector = cluster.labels, level = cell)
gating_predicted = subset_matrix_hg(hg_output,xm.t)
conf.table <- table(ifelse(gating_predicted, "Gated-in", "Gated-out"), ifelse(cluster.labels ==  cell, cell, "Others"))
print(cell)
print(conf.table)
print(hgate_rule(hg_output))
}
library(hypergate)
cell.types <- c("Astrocytes",  "RadialGlia", "Glia-lineage",
"Epithelial", "Endothelial", "Neurons1", "Neurons2", "NPC", "Neural-lineage", "Oligodendrocytes",
"OPC", "OPC-like", "Stemlike")
# run gating and get the output
for (cell in cell.types) {
hg_output <- hypergate(xp = xm.t, gate_vector = cluster.labels, level = cell)
gating_predicted = subset_matrix_hg(hg_output,xm.t)
conf.table <- table(ifelse(gating_predicted, "Gated-in", "Gated-out"), ifelse(cluster.labels ==  cell, cell, "Others"))
print(cell)
print(conf.table)
print(hgate_rule(hg_output))
}
input_path <- "/Users/rhalenathomas/GITHUB/CelltypeR/FlowCytometry_Data/FlowJoGated"
flowset <- fsc_to_fs(input_path, downsample = 5000)
library(flowWorkspace)  # this library has the function "sampleNames"
sampleNames(flowset)
sampleNames(flowset) <- c("Astrocytes","Endothelial","Epithelial","Glial_lineage","Neural_lineage","Neurons1",
"Neurons2", "NPC", "Oligodendrocytes","RadialGlia")
sampleNames(flowset)
flowset_biexp <- harmonize(flowset, processing = 'biexp')
plotdensity_flowset(flowset_biexp)
flowset_retro <- harmonize(flowset, processing = 'retro',
two_peaks =  c(8:22),
one_peak = c(1:7), threshold = 0.01)
df <- flowset_to_csv(flowset_retro)
write.csv(df, "/FlowsetGatedCellPops.csv")
write.csv(df, "FlowsetGatedCellPops.csv")
View(seu)
seu <- readRDS("/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/Analysis/NatMethodJuneSubmission/Figure5/GatedPopsSept5SomeCellGatedandLabels.RDS")
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE, raster = FALSE))
}
AB <- c("CD24","CD56","CD29","CD15","CD184","CD133","CD71","CD44","GLAST","AQP4","HepaCAM", "CD140a","O4")
for (i in AB) {
print(FeaturePlot(seu, features = i, min.cutoff = 'q1', max.cutoff = 'q97', label = TRUE, raster = FALSE))
}
library(data.table)
length(unique(seu$seurat_clusters))
plotmean(plot_type = 'heatmap',seu = seu, group = 'RNA_snn_res.1.8',
markers = AB,
var_names = c(0:34), slot = 'scale.data', xlab = "Cluster",
ylab = "Markers")
write.csv(df, "FlowJoGatedCellPops.csv")
reference_data <- read.csv("/Users/rhalenathomas/GITHUB/CelltypeR/ExampleOuts/ReferenceMatrices/FinalReferenceMatrix.csv")
df1 <- reference_data
rownames(df1) <- df1$X # add row names (these are the markers)
df1 <- df1 %>% select(-"X") # remove the column with the marker names
colnames(df1) <- c("Astrocytes","Endothelial","Epithelial","Neurons",
"NPC","OPC","Oligo","RadialGlia","StemCell")
df.ref <- as.data.frame(t(df1))
df.ref$X <- rownames(df.ref)
df_test <- read.csv("FlowJoGatedCellPops.csv")
cor <- find_correlation(test = df_test,
reference = df.ref,
min_corr = 0.25,
min_diff = 0.01)
plot_corr(cor, threshold = 0.25, min_cells = 100)
write.csv(cor, "GatedCellsCorPredictUpdated.csv")
plot_corr(cor, threshold = 0.25, min_cells = 80)
plot_lab_clust(seu, seu$RNA_snn_res.1.8, seu$cor.labels, filter_out = c( "Unassigned","Mixed"))
t.lables <- as.data.frame(table(seu$RNA_snn_res.1.8, seu$cor.labels))
t.lables$Freq <- as.double(t.lables$Freq)
colnames(t.lables) <- c("Cluster", "Label","Freq")
top.labs <- t.lables  %>% group_by(Cluster) %>% top_n(5, Freq)
sort.tops <- top.labs %>% as.data.frame() %>% arrange(desc(Freq))  %>% arrange(Cluster)
print(sort.tops)
cor.ann <- get_annotation(seu, seu.cluster = seu$RNA_snn_res.1.8,
seu.label = seu$cor.labels, top_n = 1,
filter_out = c("Unknown","unknown","Mixed",
"unassigned","Unassigned"),
Label = "CAM")
DimPlot(seu, group.by = 'rfm.pred', raster = FALSE, label = TRUE, order = rev(sorted))
DimPlot(seu, group.by = 'rfm.pred', raster = FALSE, label = TRUE)
plot_lab_clust(seu, seu$RNA_snn_res.1.8, seu$rfm.pred, filter_out = c( "Unassigned","Mixed"))
t.lables <- as.data.frame(table(seu$RNA_snn_res.1.8, seu$rfm.pred))
t.lables$Freq <- as.double(t.lables$Freq)
colnames(t.lables) <- c("Cluster", "Label","Freq")
top.labs <- t.lables  %>% group_by(Cluster) %>% top_n(5, Freq)
sort.tops <- top.labs %>% as.data.frame() %>% arrange(desc(Freq))  %>% arrange(Cluster)
print(sort.tops)
rfm.ann <- get_annotation(seu, seu.cluster = seu$RNA_snn_res.1.8,
seu.label = seu$rfm.pred, top_n = 1,
filter_out = c("Unknown","unknown","Mixed",
"unassigned","Unassigned"),
Label = "rfm.pred")
DimPlot(seu, group.by = 'seu.pred', raster = FALSE, label = TRUE)
plot_lab_clust(seu, seu$RNA_snn_res.1.8, seu$seu.pred, filter_out = c( "Unassigned","Mixed"))
t.lables <- as.data.frame(table(seu$RNA_snn_res.1.8, seu$seu.pred))
t.lables$Freq <- as.double(t.lables$Freq)
colnames(t.lables) <- c("Cluster", "Label","Freq")
top.labs <- t.lables  %>% group_by(Cluster) %>% top_n(5, Freq)
sort.tops <- top.labs %>% as.data.frame() %>% arrange(desc(Freq))  %>% arrange(Cluster)
print(sort.tops)
seu.ann <- get_annotation(seu, seu.cluster = seu$RNA_snn_res.1.8,
seu.label = seu$seu.pred, top_n = 1,
filter_out = c("Unknown","unknown","Mixed",
"unassigned","Unassigned"),
Label = "seu.pred")
an.list <- list(cor.ann, rfm.ann, seu.ann, cell.ann)
# original cell type
cell.ann <- get_annotation(seu, seu.cluster = seu$RNA_snn_res.1.8,
seu.label = seu$Sample, top_n = 1,
Label = "Cells")
an.list <- list(cor.ann, rfm.ann, seu.ann, cell.ann)
df.an <- annotate_df(an.list)
df.an
cell.order <- c("Astrocytes1","RadialGlia1","RadialGlia3","Glial-lineage",
"Epithelial","Endothelial","Neurons1",
"Neurons2","Neurons1and2","Neurons2andOligo","NPC",
"Neural-lineage","Oligodendrocytes")
clust.colours <- c("chocolate2",# Astrocytes 1
#"darkorange", # Astrocytes 2
#"orange", #Astro
"pink", # RG1
#"deeppink",# RG1a
#"plum1", #RG2
"lightpink3",# RG stemlike
"mistyrose2", # Glia-lineage
"steelblue3",# epithelial
"deepskyblue", # endothelial
#"blue", # epi-endo
"mediumpurple1",# neurons 1
"purple",# Neurons2
"mediumpurple3", # Neurons1 and 2
"grey", # Neurons2 and oligo
#"darkgrey",
"plum3", # NPC
#"tomato3",# stem like
"mediumslateblue", # Neural lineage
"seagreen3",#Oligo
"olivedrab4", # OPC
"darkseagreen3",#OPC like
"burlywood3" #extra
)
# need to set the factor to control the order
seu$Celltypes <- factor(seu$Celltypes, levels = cell.order)
DimPlot(seu, cols = sample.colours, shuffle = TRUE,
raster=FALSE, pt.size = 0.1, label = TRUE,
group.by = "Sample")
sample.colours  <- c("chocolate2",# Astrocytes 1
"steelblue3",# epithelial
"deepskyblue", # endothelial
"mistyrose2", # Glia-lineage
"mediumslateblue", # Neural lineage
"mediumpurple1",# neurons 1
"purple",# Neurons2
"plum3", # NPC
"seagreen3",#Oligo
"pink" # RG1
)
DimPlot(seu, cols = sample.colours, shuffle = TRUE,
raster=FALSE, pt.size = 0.1, label = TRUE,
group.by = "Sample")
DimPlot(seu, cols = clust.colours, shuffle = TRUE,
raster=FALSE, pt.size = 0.1, label = TRUE,
group.by = "Celltypes")
proportionplots(seu, seu.var = seu$Sample, seu.lable = seu$Celltypes,
groups = "Gated samples",
my_colours = clust.colours)
8-7
# load necessary libraries
library(Seurat)
library(dplyr)
library(ggplot2)
library(CelltypeR)
input_path <- "/Users/rhalenathomas/GITHUB/CelltypeR/FlowCytometry_Data/AIW_timeCourse"
input_path <- "/Users/rhalenathomas/GITHUB/CelltypeR/FlowCytometry_Data/AIW_timeCourse"
# 1.a Read in FlowJo Files
# down sample to take cells from each of 4 time points and 4 replicates
flowset <- fsc_to_fs(input_path, downsample = 2000)
# down sample can be a number, 'none' or 'min'
# look at file names and rename with shorter sample names
sampleNames(flowset) # function in flowCore
sampleNames(flowset) <- sampleNames(flowset) <- c("AIW_150_R1","AIW_150_R2","AIW_150_R3","AIW_150_R4",
"AIW_30_R1","AIW_30_R2","AIW_30_R3","AIW_30_R4",
"AIW_60_R1","AIW_60_R2","AIW_60_R3","AIW_60_R4",
"AIW_100_R1","AIW_100_R2","AIW_100_R3","AIW_100_R4"
)
sampleNames(flowset)
new_annotations <- c("earlyDA-NPC","earlyGlia","Neurons","Astrocytes",
"stem-like","epithelial","earlyRG","Astrocytes",
"DAneurons","RG-astro","DA-NPC","earlyNeurons",
"epithelial-endothelial","Glia","NPC",
"OPC","epithelial-maybeOligo","glia-maybeOligo")
seu <- annotate(seu, annotations = new_annotations, to_label = "RNA_snn_res.1", annotation_name = "CellTypes")
seu <- readRDS("/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/TimeCourseAIW/Analysis/seuratObjectTimecourseAIW_4.RDS")
colnames(seu@meta.data)
seu <- readRDS("/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/TimeCourseAIW/Analysis/SeuTimeCourseSub.RDS")
seu <- readRDS("/Users/rhalenathomas/Documents/Data/FlowCytometry/PhenoID/TimeCourseAIW/SeuTimeCourseSub.RDS")
colnames(seu@meta.data)
DimPlot(seu, group.by = "CellTypes")
colnames(seu@meta.data)
DimPlot(seu.t, group.by = "CelltypesMainNew", label = TRUE)
seu.t <- seu
DimPlot(seu.t, group.by = "CelltypesMainNew", label = TRUE)
# dot plot
var_names <- c("earlyDA-NPC","earlyGlia","Neurons","Astrocytes","stem-like",
"epithelial","earlyRG","DAneurons", "RG", "DA-NPC","earlyNeurons",
"epithelial and precursors","Glia", "NPC","OPC")
# make sure the terms are exactly the same and you don't miss any
new.order <- c("stem-like","epithelial and precursors",
"earlyDA-NPC","earlyGlia","earlyRG","OPC","NPC","DA-NPC",
"earlyNeurons","Neurons","DAneurons","epithelial","Astrocytes","Glia","RG"
)
new.order <- rev(new.order)
AB.order <- c("TH","CD24","CD56","CD29","CD15","CD184",
"CD133","SSEA4","CD44","CD49f","CD140a")
plotmean(plot_type = 'dotplot',seu = seu, group = 'CelltypesMain', markers = AB,
var_names = var_names, slot = 'scale.data', xlab = "Cell Type",
ylab = "Antibody", var1order = new.order, var2order = AB.order)
